name: TechMart Backend CI/CD

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

env:
  DOTNET_VERSION: "9.0.x"

jobs:
  test:
    runs-on: ubuntu-latest
    name: üß™ Test

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: Password123!
          POSTGRES_DB: TechMartTest
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore dependencies
        run: dotnet restore src/TechMart.Backend.sln

      - name: Build
        run: dotnet build src/TechMart.Backend.sln --no-restore

      - name: Unit Tests
        run: dotnet test tests/UnitTests/ --no-build --verbosity normal --collect:"XPlat Code Coverage"

      - name: Integration Tests
        run: dotnet test tests/IntegrationTests/ --no-build --verbosity normal
        env:
          ConnectionStrings__DefaultConnection: "Host=localhost;Database=TechMartTest;Username=postgres;Password=Password123!"

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.cobertura.xml
          fail_ci_if_error: true

  build-and-push:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    name: üê≥ Build & Push Docker Images

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Auth Service
        uses: docker/build-push-action@v5
        with:
          context: ./src
          file: ./src/Services/Auth/Dockerfile
          push: true
          tags: techmart/auth-service:latest

      - name: Build and push Product Service
        uses: docker/build-push-action@v5
        with:
          context: ./src
          file: ./src/Services/Product/Dockerfile
          push: true
          tags: techmart/product-service:latest

  deploy-staging:
    runs-on: ubuntu-latest
    needs: build-and-push
    if: github.ref == 'refs/heads/develop'
    name: üöÄ Deploy to Staging

    steps:
      - name: Deploy to staging
        run: |
          echo "Deploying to staging environment"
          # Add deployment scripts here

  deploy-production:
    runs-on: ubuntu-latest
    needs: build-and-push
    if: github.ref == 'refs/heads/main'
    name: üåü Deploy to Production

    steps:
      - name: Deploy to production
        run: |
          echo "Deploying to production environment"
          # Add deployment scripts here
